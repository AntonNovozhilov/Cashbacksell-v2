from aiogram import types, Router, F

from keyboards.inline_kb import inline_create_post, inline_price
from keyboards.kb_user import kb_admin
from config import (
    CHANNEL_ID_CASH,
    PRICE_MESSAGE_ID_CASH,
    CHANNEL_ID_BARTER,
    PRICE_MESSAGE_ID_BARTER,
    admin,
    kb_price_text,
    kb_create_post_text,
    kb_cannals_text,
    kb_faq_text,
    kb_requis_text,
    kb_admin_text,
    kb_admin_pannel_text
)
from texts.command_text import FAQ, TEXT_CHANNALS, TEXT_REQ


kb_com = Router()



@kb_com.message(F.text==kb_create_post_text)
async def inline_create_posts(message: types.Message):
    '''–í—ã–∑–æ–≤ 2 –∏–Ω–ª–∞–π–Ω –∫–Ω–∏–ø–∫–∏ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –º–µ–Ω—é –°–æ—Å—Ç–∞–≤–∏—Ç—å –ø–æ—Å—Ç.'''

    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –≤ –∫–∞–∫–æ–π –∫–∞–Ω–∞–ª —Å–æ—Å—Ç–∞–≤–∏—Ç—å –ø–æ—Å—Ç', reply_markup=inline_create_post())

@kb_com.message(F.text==kb_price_text)
async def price(message: types.Message):
    '''–í—ã–∑–æ–≤ 2 –∏–Ω–ª–∞–π–Ω –∫–Ω–∏–ø–∫–∏ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –º–µ–Ω—é –ü—Ä–∞–π—Å.'''

    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–Ω–∞–ª üëá',
                         reply_markup=inline_price())
    
@kb_com.message(F.text == kb_faq_text)
async def faq(message: types.Message):
    '''–í—ã–∑–æ–≤ –ø–æ—Å—Ç–∞ —Å FAQ–æ–º.'''

    await message.answer(text=FAQ)

@kb_com.message(F.text == kb_cannals_text)
async def list_channals(message: types.Message):
    '''–í—ã–∑–æ–≤ –ø–æ—Å—Ç–∞ —Å —Å–ø–∏—Å–∫–æ–º –∫–∞–Ω–∞–ª–æ–≤.'''

    await message.answer(text=TEXT_CHANNALS)

@kb_com.message(F.text == kb_requis_text)
async def reqwuis(message: types.Message):
    '''–í—ã–∑–æ–≤ –ø–æ—Å—Ç–∞ —Å —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º–∏ –¥–ª—è –æ–ø–ª–∞—Ç—ã.'''

    await message.answer(text=TEXT_REQ)

@kb_com.message(F.text == kb_admin_text)
async def link_admin(message: types.Message):
    '''–í—ã–∑–æ–≤ –ø–æ—Å—Ç–∞ —Å —Å—ã–ª–∫–æ–π –Ω–∞ –∞–¥–º–∏–Ω–∞.'''

    await message.answer(text='[–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –Æ–ª–∏—è](https://t.me/@Juli_Novozhilova)', parse_mode='MarkdownV2')

@kb_com.message(F.text == kb_admin_pannel_text)
async def panel_admin(message: types.Message):
    '''–í—ã–∑–æ–≤ –º–µ–Ω—é –∞–¥–º–∏–Ω–∞.'''

    await message.answer('–í—ã –≤–æ—à–ª–∏ –≤ –∞–¥–º–∏–Ω–∫—É', reply_markup=kb_admin(message.from_user.id))

@kb_com.callback_query(F.data=='price_cash')
async def price_cashback(callback: types.CallbackQuery):
    '''–ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É 1 –ø–µ—Ä–µ—Å—ã–ª–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –∫–∞–Ω–∞–ª–∞ —Å –ø—Ä–∞–π—Å–æ–º –∫–µ—à–±–µ–∫–∞.'''

    await callback.message.bot.forward_message(
        chat_id=callback.message.chat.id,
        from_chat_id=CHANNEL_ID_CASH,
        message_id=PRICE_MESSAGE_ID_CASH
    )

@kb_com.callback_query(F.data=='price_barter')
async def price_barter(callback: types.CallbackQuery):
    '''–ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É 2 –ø–µ—Ä–µ—Å—ã–ª–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –∫–∞–Ω–∞–ª–∞ —Å –ø—Ä–∞–π—Å–æ–º –±–∞—Ä—Ç–µ—Ä–∞.'''

    await callback.message.bot.forward_message(
        chat_id=callback.message.chat.id,
        from_chat_id=CHANNEL_ID_BARTER,
        message_id=PRICE_MESSAGE_ID_BARTER
    )

# @kb_com.message(F.text==kb_price_text)
# async def price(message: types.Message):
#     await message.bot.forward_message(
#         chat_id=message.chat.id,
#         from_chat_id=CHANNEL_ID_CASH,
#         message_id=PRICE_MESSAGE_ID_CASH
#     )
#     await message.bot.forward_message(
#         chat_id=message.chat.id,
#         from_chat_id=CHANNEL_ID_BARTER,
#         message_id=PRICE_MESSAGE_ID_BARTER
#     )

# –û–±—Ä–∞–±–æ—Ç—á–∫–∏ —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å id –∫–∞–Ω–∞–ª–∞ –∏ —Å–æ–æ–±—â–µ–Ω–∏—è
# @kb_com.message()
# async def catch_forwarded(message: types.Message):
#     if message.forward_from_chat:
#         chat_id = message.forward_from_chat.id
#         post_id = message.forward_from_message_id
#         await message.answer(f"–ö–∞–Ω–∞–ª ID: {chat_id}\n–ü–æ—Å—Ç ID: {post_id}")